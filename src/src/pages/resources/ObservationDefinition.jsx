/* eslint-disable no-unused-vars */
/* eslint-disable no-trailing-spaces */
// This file is auto-generated by generate_classes so do not edit manually

/**
ObservationDefinition
    Set of definitional characteristics for a kind of observation or measurement
    produced or consumed by an orderable health care service.
    If the element is present, it must have either a @value, an @id, or extensions
*/

import React from 'react';
import { Link } from '@mui/material';

// Import all the partial resource
import Partials from '../../partials';

const ObservationDefinition = ({ resource }) => {
  return (
    <>
      <Link
        title="Direct link to Resource"
        href={`/4_0_0/${resource.resourceType}/${resource.id}`}
      >
        {resource.resourceType}/{resource.id}
      </Link>
      {resource.meta && (
        <Partials.Meta
          meta={resource.meta}
          name="Meta"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="meta"
        />
      )}
      {resource.implicitRules && (
        <Partials.Uri
          uri={resource.implicitRules}
          name="Implicit Rules"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="implicit-rules"
        />
      )}
      {resource.language && (
        <Partials.Code code={resource.language} name="Language" />
      )}
      {resource.text && (
        <Partials.Narrative
          narrative={resource.text}
          name="Text"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="text"
        />
      )}
      {resource.extension && (
        <Partials.Extension
          extension={resource.extension}
          name="Extension"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="extension"
        />
      )}
      {resource.modifierExtension && (
        <Partials.Extension
          extension={resource.modifierExtension}
          name="Modifier Extension"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="modifier-extension"
        />
      )}
      {resource.category && (
        <Partials.CodeableConcept
          codeableConcept={resource.category}
          name="Category"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="category"
        />
      )}
      {resource.code && (
        <Partials.CodeableConcept
          codeableConcept={resource.code}
          name="Code"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="code"
        />
      )}
      {resource.identifier && (
        <Partials.Identifier
          identifier={resource.identifier}
          name="Identifier"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="identifier"
        />
      )}
      {resource.permittedDataType && (
        <Partials.Code
          code={resource.permittedDataType}
          name="Permitted Data Type"
        />
      )}
      {resource.multipleResultsAllowed && (
        <Partials.Boolean
          boolean={resource.multipleResultsAllowed}
          name="Multiple Results Allowed"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="multiple-results-allowed"
        />
      )}
      {resource.method && (
        <Partials.CodeableConcept
          codeableConcept={resource.method}
          name="Method"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="method"
        />
      )}
      {resource.validCodedValueSet && (
        <Partials.Reference
          reference={resource.validCodedValueSet}
          name="Valid Coded Value Set"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="valid-coded-value-set"
        />
      )}
      {resource.normalCodedValueSet && (
        <Partials.Reference
          reference={resource.normalCodedValueSet}
          name="Normal Coded Value Set"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="normal-coded-value-set"
        />
      )}
      {resource.abnormalCodedValueSet && (
        <Partials.Reference
          reference={resource.abnormalCodedValueSet}
          name="Abnormal Coded Value Set"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="abnormal-coded-value-set"
        />
      )}
      {resource.criticalCodedValueSet && (
        <Partials.Reference
          reference={resource.criticalCodedValueSet}
          name="Critical Coded Value Set"
          resourceType={resource.resourceType}
          id={resource.id}
          searchParameter="critical-coded-value-set"
        />
      )}
    </>
  );
};

export default ObservationDefinition;
